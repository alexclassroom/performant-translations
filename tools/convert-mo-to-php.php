<?php
include dirname( dirname(__FILE__) ) . '/class-ginger-mo-translation-file.php';
include dirname( dirname(__FILE__) ) . '/class-ginger-mo-translation-file-mo.php';

$opts = getopt( '', array( 'source:', 'destination:', 'overwrite::' ) );

if ( ! isset( $opts['source'] ) || ! isset( $opts['destination'] ) ) {
	echo "Usage: php $argv[0] --source file.mo --destination file.mo.php\n";
	echo "--source      Specifies the source .MO file.\n";
	echo "--destination Specifies the output file.\n";
	echo "--overwrite   Include to overwrite any existing destination file.\n\n";
	exit(1);
}
if ( ! isset( $opts['overwrite'] ) && file_exists( $opts['destination'] ) ) {
	echo "Destination file exists, Specify --overwrite to overwrite. \n";
	exit(1);
}

class Ginger_MO_Tool_MO_to_PHP extends Ginger_MO_Translation_File_MO {
	public static function convert( $file, $destination ) {
		$class = __CLASS__;
		$instance = new $class( $file );
		if ( $instance->error() ) {
			return false;
		}

		$instance->parse_file();

		return $instance->save_as_php( $destination );
	}
	public function save_as_php( $destination ) {
		global $argv;
		$generator = basename( $argv[0] );
		$source_basename = basename( $this->file );
		$date = date('r');

		$file = '<' . "?php\n";
		$file .= "// Generated by {$generator} from {$source_basename} on {$date}.\n";
		$headers = & $this->headers;
		$entries = & $this->entries;

		$plural_func = false;
		if ( isset( $this->headers['plural-forms'] ) && preg_match( '#^nplurals=(\d+);\s*plural=([n><!=\s()?%&|:0-9-]+);?$#i', $this->headers['plural-forms'], $match ) ) {
			$num_plurals = (int) $match[1] - 1; // indexed from 1
			$nexpression =  str_replace( 'n', '$n', trim( $match[2] ) );
			$plural_form_function = 'plural_forms_' . preg_replace( '![^a-z_-]!i', '_', basename( $this->file ) ) . '_' . sha1( uniqid( rand(), true ) );
			$plural_func = "function {$plural_form_function}( \$n ) { return (int)( {$nexpression} ); }";
		}

		if ( $plural_func ) {
			$file .= $plural_func . "\n";
		}
		$file .= 'return ' . var_export( compact( 'plural_form_function', 'headers', 'entries' ), true ) . ';';

		file_put_contents( $destination, $file );

		return true;
	}
}

echo "Converting " . basename( $opts['source'] ) . " to " . basename( $opts['destination'] ) . ".. ";
if ( !  Ginger_MO_Tool_MO_to_PHP::convert( $opts['source'], $opts['destination'] ) ) {
	echo "Error parsing " . $opts['source'] . "\n";
	exit(1);
}
echo "DONE. \n";